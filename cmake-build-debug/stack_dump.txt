assert from void Stack_Construct(Stack_t *, char *) in line 102 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from void Stack_Construct(Stack_t *, char *) in line 102 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 0
	data[10] = 74600030
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -335512514
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 0
	data[10] = 74600030
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -335512514
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 1
	data[10] = 74600030
	{
	* [0] = 1
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2132435076
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1500610040
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1500610040
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1500610040
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 934334863
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 934334863
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 934334863
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1979483321
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 1
	data[10] = 74600030
	{
	* [0] = 1
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2132435076
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 2
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1416935268
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1979483321
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 82321385
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 82321385
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 50000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 628489138
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 50000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 628489138
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 50000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 628489138
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 82321385
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 82321385
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 82321385
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1979483321
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1979483321
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 128758172
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 128758172
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 128758172
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1979483321
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1979483321
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1979483321
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1979483321
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1979483321
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 80000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1979483321
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2010219513
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2010219513
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2010219513
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1655160598
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1655160598
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1655160598
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1655160598
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1655160598
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 70000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 817567283
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 70000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 817567283
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 70000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 817567283
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1655160598
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1655160598
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1655160598
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 804775186
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 2
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1416935268
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 3
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 67263399
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 804775186
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1054238709
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1054238709
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 100000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1600406462
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 100000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1600406462
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 100000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1600406462
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1054238709
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1054238709
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1054238709
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 804775186
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 804775186
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1093741622
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1093741622
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1093741622
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 804775186
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 804775186
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 804775186
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 804775186
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 804775186
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 80000
	* [1] = 70000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 804775186
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 486289175
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 136180671
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 136180671
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 136180671
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1655160598
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1655160598
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 70000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1964505386
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 70000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1964505386
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 70000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1964505386
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1655160598
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1655160598
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1655160598
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1763023990
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1763023990
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1763023990
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1763023990
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1763023990
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 60000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -59215425
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 60000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -59215425
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 60000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -59215425
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1763023990
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1763023990
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1763023990
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 136180671
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 136180671
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 533570270
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 3
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 67263399
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 4
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -478904354
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 533570270
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1849171794
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1849171794
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 150000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1899627749
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 150000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1899627749
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 150000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1899627749
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1849171794
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1849171794
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1849171794
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 533570270
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 533570270
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1040911390
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1040911390
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1040911390
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 533570270
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 533570270
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 533570270
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 136180671
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 136180671
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 136180671
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 136180671
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 136180671
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 533570270
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 533570270
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 560000
	* [1] = 60000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 533570270
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 136180671
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 136180671
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 136180671
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1824946896
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1824946896
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1824946896
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1763023990
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1763023990
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 60000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1290061510
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 60000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1290061510
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 60000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1290061510
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1763023990
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1763023990
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1763023990
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 934334863
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 934334863
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 934334863
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 934334863
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 934334863
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 50000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -887904552
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 50000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -887904552
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 50000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -887904552
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 934334863
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 934334863
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 934334863
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1824946896
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1824946896
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1736684036
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 4
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -478904354
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 5
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1407410847
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1736684036
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -387012156
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -387012156
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 200000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 159155597
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 200000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 159155597
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 200000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 159155597
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -387012156
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -387012156
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -387012156
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1736684036
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1736684036
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 776255993
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 776255993
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 776255993
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1736684036
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1736684036
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1736684036
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1824946896
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1824946896
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1824946896
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1824946896
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1824946896
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1736684036
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1736684036
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 3360000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1736684036
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1824946896
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1824946896
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1824946896
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1461138916
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1461138916
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1461138916
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 934334863
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 934334863
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 50000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2022646449
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 50000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2022646449
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 50000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2022646449
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 934334863
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 934334863
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 934334863
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -144742016
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -144742016
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -144742016
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -144742016
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -144742016
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 40000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1966981431
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 40000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1966981431
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 40000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1966981431
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -144742016
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -144742016
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -144742016
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1461138916
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1461138916
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1425728105
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 5
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1407410847
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 6
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 414828568
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1425728105
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 543453318
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 543453318
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 250000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1089621071
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 250000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1089621071
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 250000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1089621071
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 543453318
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 543453318
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 543453318
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1425728105
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1425728105
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1940732679
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1940732679
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1940732679
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1425728105
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1425728105
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1425728105
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1461138916
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1461138916
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1461138916
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1461138916
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1461138916
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1425728105
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1425728105
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 16800000
	* [1] = 40000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1425728105
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1461138916
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1461138916
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1461138916
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -525590033
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -525590033
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -525590033
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -144742016
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -144742016
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 40000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -595151472
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 40000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -595151472
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 40000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -595151472
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -144742016
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -144742016
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -144742016
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 378912697
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 378912697
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 378912697
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 378912697
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 378912697
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 30000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1443326718
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 30000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1443326718
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 30000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1443326718
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 378912697
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 378912697
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 378912697
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -525590033
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -525590033
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1334873533
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 6
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 414828568
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 7
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -513677925
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1334873533
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 46328367
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 46328367
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 300000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 592496120
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 300000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 592496120
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 300000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 592496120
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 46328367
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 46328367
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 46328367
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1334873533
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1334873533
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 983248739
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 983248739
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 983248739
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1334873533
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1334873533
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1334873533
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -525590033
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -525590033
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -525590033
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -525590033
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -525590033
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1334873533
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1334873533
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 67200000
	* [1] = 30000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1334873533
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -525590033
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -525590033
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -525590033
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2144570192
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2144570192
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2144570192
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 378912697
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 378912697
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 30000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 210551783
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 30000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 210551783
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 30000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 210551783
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 378912697
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 378912697
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 378912697
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1484908370
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1484908370
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1484908370
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1484908370
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1484908370
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 20000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -337331045
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 20000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -337331045
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 20000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -337331045
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1484908370
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1484908370
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1484908370
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2144570192
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2144570192
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2069214521
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 7
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -513677925
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 8
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	* [7] = 64
	  [8] = 0
	  [9] = 0
	}
hash is now: 822072578
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2069214521
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1764643455
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1764643455
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 350000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1984156088
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 350000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1984156088
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 350000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1984156088
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1764643455
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1764643455
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1764643455
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2069214521
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2069214521
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 288747210
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 288747210
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 288747210
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2069214521
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2069214521
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2069214521
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2144570192
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2144570192
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2144570192
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2144570192
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2144570192
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2069214521
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2069214521
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 201600000
	* [1] = 20000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2069214521
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2144570192
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2144570192
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2144570192
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1484908370
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1484908370
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 20000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1611182334
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 20000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1611182334
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 20000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1611182334
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1484908370
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1484908370
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1484908370
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 703134644
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 703134644
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 703134644
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1837518908
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 8
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	* [7] = 64
	  [8] = 0
	  [9] = 0
	}
hash is now: 822072578
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 9
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	* [7] = 64
	* [8] = 64
	  [9] = 0
	}
hash is now: -106433915
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1837518908
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 997918543
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 997918543
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 400000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1544086296
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 400000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1544086296
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 400000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1544086296
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 997918543
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 997918543
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 997918543
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1837518908
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1837518908
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 450000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -365673724
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 450000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -365673724
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 450000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -365673724
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1837518908
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1837518908
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1837518908
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1837518908
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1837518908
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1837518908
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1373857067
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1373857067
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 10000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1373857067
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1769593237
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1322091781
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1322091781
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1322091781
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 450000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1732092545
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 450000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1732092545
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 450000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1185924792
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 450000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1185924792
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 450000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1185924792
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 450000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1732092545
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 450000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1732092545
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 450000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1732092545
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 427436404
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 427436404
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 427436404
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 9
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	* [7] = 64
	* [8] = 64
	  [9] = 0
	}
hash is now: -106433915
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 9
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	* [7] = 64
	* [8] = 64
	  [9] = 0
	}
hash is now: -106433915
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 8
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	* [7] = 64
	  [8] = 0
	  [9] = 0
	}
hash is now: 822072578
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -451275916
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -451275916
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 400000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 94891837
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 400000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 94891837
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 400000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 94891837
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -451275916
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -451275916
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -451275916
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 599295449
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 599295449
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 599295449
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 8
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	* [7] = 64
	  [8] = 0
	  [9] = 0
	}
hash is now: 822072578
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 8
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	* [7] = 64
	  [8] = 0
	  [9] = 0
	}
hash is now: 822072578
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 7
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -513677925
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -279416871
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -279416871
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 350000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 266750882
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 350000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 266750882
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 350000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 266750882
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -279416871
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -279416871
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -279416871
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1173258829
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1173258829
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1173258829
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 7
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -513677925
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 7
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -513677925
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 6
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 414828568
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2051971149
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2051971149
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 300000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1696828394
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 300000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1696828394
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 300000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1696828394
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2051971149
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2051971149
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2051971149
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1274545606
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1274545606
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1274545606
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 6
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 414828568
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 6
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 414828568
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 5
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1407410847
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2141709370
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2141709370
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 250000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1607090173
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 250000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1607090173
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 250000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1607090173
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2141709370
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2141709370
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2141709370
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 267868319
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 267868319
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 267868319
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 5
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1407410847
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 5
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1407410847
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 4
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -478904354
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1146580639
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1146580639
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 200000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1692748392
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 200000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1692748392
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 200000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1692748392
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1146580639
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1146580639
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1146580639
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1840891725
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1840891725
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1840891725
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 4
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -478904354
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 4
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -478904354
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 3
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 67263399
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -962179405
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -962179405
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 150000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -416011652
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 150000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -416011652
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 150000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -416011652
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -962179405
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -962179405
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -962179405
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 752093560
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 752093560
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 752093560
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 3
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 67263399
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 3
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 67263399
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 2
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1416935268
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1630805880
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1630805880
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 100000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2117993663
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 100000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2117993663
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 4
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 100000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2117993663
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1630805880
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1630805880
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1630805880
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1422565133
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1422565133
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1422565133
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 2
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1416935268
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 2
	data[10] = 74600030
	{
	* [0] = 1
	* [1] = 125
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1416935268
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 1
	data[10] = 74600030
	{
	* [0] = 1
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2132435076
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 639239517
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1150636100
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 0
	data[10] = 74600000
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2079142593
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1542005664
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1542005664
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 50000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1533487734
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 50000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1533487734
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 3
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 50000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1533487734
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1542005664
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1542005664
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1542005664
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 2
	data[10] = 74600000
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -239472803
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [e44459d0] (ok)
{
	size = 1
	data[10] = 74600000
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1582766612
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 1
	data[10] = 74600030
	{
	* [0] = 1
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2132435076
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 1
	data[10] = 74600030
	{
	* [0] = 1
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2132435076
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [e44459a8] (ok)
{
	size = 0
	data[10] = 74600030
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -335512514
}


assert from void Stack_Construct(Stack_t *, char *) in line 102 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from void Stack_Construct(Stack_t *, char *) in line 102 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 0
	data[10] = ea600250
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1604334937
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 0
	data[10] = ea600250
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1604334937
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 1
	data[10] = ea600250
	{
	* [0] = 1
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1664425361
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2051187289
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2051187289
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2051187289
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1665848090
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1665848090
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1665848090
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1236313354
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 1
	data[10] = ea600250
	{
	* [0] = 1
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1664425361
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 2
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -938184577
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1236313354
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1777105728
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1777105728
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 50000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1276563477
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 50000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1276563477
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 50000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1276563477
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1777105728
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1777105728
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1777105728
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1236313354
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1236313354
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1823542515
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1823542515
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1823542515
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1236313354
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1236313354
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1236313354
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1236313354
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1236313354
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 80000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1236313354
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1267049546
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1267049546
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1267049546
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 39623745
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 39623745
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 39623745
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 39623745
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 39623745
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 70000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 74397316
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 70000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 74397316
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 70000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 74397316
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 39623745
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 39623745
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 39623745
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 61605219
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 2
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -938184577
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 3
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -430843460
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 61605219
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1545944244
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1545944244
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 100000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -304646153
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 100000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -304646153
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 100000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -304646153
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1545944244
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1545944244
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1545944244
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 61605219
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 61605219
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1506441331
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1506441331
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1506441331
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 61605219
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 61605219
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 61605219
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 61605219
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 61605219
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 80000
	* [1] = 70000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 61605219
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 80000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2113893778
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1830965014
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1830965014
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1830965014
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 39623745
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 39623745
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 70000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1587291943
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 70000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1587291943
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 70000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1587291943
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 39623745
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 39623745
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 70000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 39623745
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -837158963
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -837158963
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -837158963
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -837158963
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -837158963
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 60000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -802385392
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 60000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -802385392
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 60000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -802385392
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -837158963
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -837158963
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -837158963
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1830965014
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1830965014
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -209599697
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 3
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -430843460
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 4
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1460943097
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -209599697
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -751011159
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -751011159
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 150000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 490286932
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 150000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 490286932
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 150000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 490286932
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -751011159
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -751011159
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -751011159
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -209599697
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -209599697
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1559271563
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1559271563
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1559271563
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -209599697
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -209599697
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -209599697
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1830965014
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1830965014
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1830965014
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1830965014
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1830965014
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -209599697
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -209599697
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 560000
	* [1] = 60000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -209599697
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1830965014
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1830965014
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 560000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1830965014
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -130162553
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -130162553
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -130162553
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -837158963
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -837158963
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 60000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2033231477
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 60000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2033231477
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 60000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2033231477
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -837158963
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -837158963
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 60000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -837158963
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1665848090
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1665848090
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1665848090
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1665848090
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1665848090
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 50000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1631074519
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 50000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1631074519
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 50000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1631074519
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1665848090
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1665848090
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1665848090
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -130162553
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -130162553
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1815113293
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 4
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1460943097
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 5
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1905517706
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1815113293
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1307772187
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1307772187
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 200000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1745897018
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 200000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1745897018
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 200000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1745897018
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1307772187
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1307772187
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1307772187
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1815113293
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1815113293
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1823926960
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1823926960
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1823926960
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1815113293
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1815113293
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1815113293
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -130162553
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -130162553
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -130162553
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -130162553
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -130162553
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1815113293
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1815113293
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 3360000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1815113293
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -130162553
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -130162553
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 3360000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -130162553
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 233645427
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 233645427
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 233645427
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1665848090
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1665848090
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 50000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1279476482
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 50000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1279476482
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 50000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1279476482
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1665848090
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1665848090
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 50000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1665848090
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1550042327
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1550042327
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1550042327
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1550042327
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1550042327
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 40000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1584815898
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 40000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1584815898
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 40000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1584815898
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1550042327
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1550042327
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1550042327
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 233645427
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 233645427
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 682558138
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 5
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1905517706
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 6
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1940291277
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 682558138
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2056729635
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2056729635
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 250000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -815431544
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 250000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -815431544
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 250000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -815431544
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2056729635
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2056729635
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2056729635
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 682558138
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 682558138
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -245948336
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -245948336
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -245948336
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 682558138
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 682558138
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 682558138
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 233645427
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 233645427
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 233645427
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 233645427
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 233645427
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 682558138
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 682558138
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 16800000
	* [1] = 40000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 682558138
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 233645427
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 233645427
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 16800000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 233645427
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1169194310
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1169194310
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1169194310
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1550042327
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1550042327
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 40000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1338321439
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 40000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1338321439
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 40000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1338321439
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1550042327
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1550042327
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 40000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1550042327
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2073697040
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2073697040
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2073697040
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2073697040
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2073697040
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 30000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2108470611
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 30000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2108470611
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 30000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2108470611
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2073697040
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2073697040
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2073697040
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1169194310
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1169194310
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2078043500
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 6
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1940291277
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 7
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1011784784
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2078043500
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1741112710
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1741112710
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 300000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1312556495
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 300000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1312556495
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 300000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1312556495
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1741112710
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1741112710
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1741112710
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2078043500
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2078043500
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1616934214
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1616934214
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1616934214
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2078043500
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2078043500
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2078043500
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1169194310
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1169194310
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1169194310
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1169194310
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1169194310
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2078043500
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2078043500
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 67200000
	* [1] = 30000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2078043500
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1169194310
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1169194310
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 67200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1169194310
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -449785849
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -449785849
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -449785849
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2073697040
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2073697040
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 30000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -532618184
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 30000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -532618184
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 30000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -532618184
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2073697040
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2073697040
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 30000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2073697040
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1115274583
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1115274583
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1115274583
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1115274583
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1115274583
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 20000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1080501012
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 20000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1080501012
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 20000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1080501012
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1115274583
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1115274583
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1115274583
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -449785849
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -449785849
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1482582808
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 7
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1011784784
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 8
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	* [7] = 64
	  [8] = 0
	  [9] = 0
	}
hash is now: 1321848813
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1482582808
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -835539498
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -835539498
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 350000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 405758593
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 350000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 405758593
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 350000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 405758593
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -835539498
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -835539498
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -835539498
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1482582808
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1482582808
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1983531553
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1983531553
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1983531553
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1482582808
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1482582808
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1482582808
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -449785849
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -449785849
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -449785849
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -449785849
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -449785849
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1482582808
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1482582808
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 201600000
	* [1] = 20000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1482582808
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -449785849
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -449785849
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 201600000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -449785849
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1115274583
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1115274583
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 20000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 868012367
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 20000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 868012367
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 20000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 868012367
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1115274583
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1115274583
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 20000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1115274583
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -40035323
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -40035323
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -40035323
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1094348941
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 8
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	* [7] = 64
	  [8] = 0
	  [9] = 0
	}
hash is now: 1321848813
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 9
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	* [7] = 64
	* [8] = 64
	  [9] = 0
	}
hash is now: -2044611990
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1094348941
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1602264410
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1602264410
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 400000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -360966319
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 400000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -360966319
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 400000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -360966319
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1602264410
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1602264410
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1602264410
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1094348941
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1094348941
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 450000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1329110619
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 450000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1329110619
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	* [2] = 450000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1329110619
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1094348941
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1094348941
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1094348941
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1094348941
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1094348941
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1094348941
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2117027034
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2117027034
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 10000
	* [1] = 10000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2117027034
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 10000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -74808894
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 578921814
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 578921814
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 578921814
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 450000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -37308202
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 450000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -37308202
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 450000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1203989889
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 450000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1203989889
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 450000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1203989889
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 450000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -37308202
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 450000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -37308202
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 450000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -37308202
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2122220747
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2122220747
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2122220747
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 9
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	* [7] = 64
	* [8] = 64
	  [9] = 0
	}
hash is now: -2044611990
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 9
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	* [7] = 64
	* [8] = 64
	  [9] = 0
	}
hash is now: -2044611990
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 8
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	* [7] = 64
	  [8] = 0
	  [9] = 0
	}
hash is now: 1321848813
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1243508427
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1243508427
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 400000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1810160778
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 400000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1810160778
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 400000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1810160778
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1243508427
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1243508427
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 400000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1243508427
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2000887504
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2000887504
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -2000887504
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 8
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	* [7] = 64
	  [8] = 0
	  [9] = 0
	}
hash is now: 1321848813
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 8
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	* [7] = 64
	  [8] = 0
	  [9] = 0
	}
hash is now: 1321848813
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 7
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1011784784
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1415367472
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1415367472
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 350000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1638301733
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 350000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1638301733
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 350000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1638301733
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1415367472
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1415367472
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 350000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1415367472
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1426924124
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1426924124
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1426924124
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 7
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1011784784
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 7
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	* [6] = 64
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1011784784
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 6
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1940291277
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -548211804
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -548211804
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 300000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 693086287
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 300000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 693086287
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 300000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 693086287
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -548211804
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -548211804
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 300000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -548211804
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 420238737
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 420238737
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 420238737
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 6
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1940291277
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 6
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	* [5] = 64
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1940291277
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 5
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1905517706
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -458473583
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -458473583
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 250000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 782824508
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 250000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 782824508
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 250000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 782824508
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -458473583
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -458473583
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 250000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -458473583
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1962652662
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1962652662
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1962652662
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 5
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1905517706
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 5
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	* [4] = 64
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1905517706
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 4
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1460943097
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1453602314
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1453602314
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 200000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -212304223
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 200000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -212304223
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 200000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -212304223
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1453602314
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1453602314
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 200000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1453602314
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -146107382
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -146107382
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -146107382
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 4
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1460943097
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 4
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	* [3] = 64
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1460943097
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 3
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -430843460
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 732604938
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 732604938
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 150000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1973903029
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 150000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1973903029
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 150000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1973903029
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 732604938
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 732604938
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 150000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 732604938
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1848089393
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1848089393
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1848089393
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 3
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -430843460
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 3
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	* [2] = 64
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -430843460
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 2
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -938184577
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -969377073
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -969377073
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 100000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 271921018
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 100000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 271921018
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 4
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 100000
	* [3] = 50000
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 271921018
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -969377073
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -969377073
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 100000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -969377073
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1177617820
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1177617820
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1177617820
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 2
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -938184577
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 2
	data[10] = ea600250
	{
	* [0] = 1
	* [1] = 125
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -938184577
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 1
	data[10] = ea600250
	{
	* [0] = 1
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1664425361
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 0
	* [1] = 403200000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -103930450
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 544148243
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 0
	data[10] = ea600220
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1472654736
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2009791665
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2009791665
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 50000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 161296609
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 50000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 161296609
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 3
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 50000
	* [2] = 50000
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 161296609
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2009791665
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2009791665
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 50000
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 2009791665
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from bool St_push(Stack_t *, Elem_t) in line 132 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from bool St_push(Stack_t *, Elem_t) in line 145 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 2
	data[10] = ea600220
	{
	* [0] = 403200000
	* [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -982642770
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&stk> [ee1719e0] (ok)
{
	size = 1
	data[10] = ea600220
	{
	* [0] = 403200000
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: -1017416341
}


assert from Elem_t St_pop(Stack_t *) in line 173 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 1
	data[10] = ea600250
	{
	* [0] = 1
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1664425361
}


assert from void St_narrow(Stack_t *, double) in line 203 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 1
	data[10] = ea600250
	{
	* [0] = 1
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1664425361
}


assert from Elem_t St_pop(Stack_t *) in line 189 (file: /Users/alexeykudrinsky/Documents/MIPT/1 course/Introduction to data structures/language/stack.cpp)
Stack_t <&func_stk> [ee1719b8] (ok)
{
	size = 0
	data[10] = ea600250
	{
	  [0] = 0
	  [1] = 0
	  [2] = 0
	  [3] = 0
	  [4] = 0
	  [5] = 0
	  [6] = 0
	  [7] = 0
	  [8] = 0
	  [9] = 0
	}
hash is now: 1604334937
}


